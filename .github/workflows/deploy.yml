name: 'Build and Deploy'

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2

      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            set -e
            
            cd /home/ubuntu/CoDev-Studio

            # Pull the latest code from GitHub
            git pull origin main

            # Set up environment variables for server
            if [ ! -f "server/.env" ] || ! grep -q "MONGO_URL=" server/.env; then
              echo "MONGO_URL=mongodb://localhost:27017/code-editor" > server/.env
            fi

            if [ ! -f "server/.env" ] || ! grep -q "REDIS_URL=" server/.env; then
              echo "REDIS_URL=redis://localhost:6379" >> server/.env
            fi

            # Set up environment variables for worker
            if [ ! -f "worker/.env" ] || ! grep -q "X_RAPID_API_KEY=" worker/.env; then
              echo "X_RAPID_API_KEY=${{ secrets.X_RAPID_API_KEY }}" > worker/.env
            fi

            if [ ! -f "worker/.env" ] || ! grep -q "REDIS_URL=" worker/.env; then
              echo "REDIS_URL=${{ secrets.REDIS_URL }}" >> worker/.env
            fi

            if [ ! -f "worker/.env" ] || ! grep -q "REDIS_PASSWORD=" worker/.env; then
              echo "REDIS_PASSWORD=${{ secrets.REDIS_PASSWORD }}" >> worker/.env
            fi

            if [ ! -f "worker/.env" ] || ! grep -q "REDIS_HOSTNAME=" worker/.env; then
              echo "REDIS_HOSTNAME=${{ secrets.REDIS_HOSTNAME }}" >> worker/.env
            fi

            if [ ! -f "worker/.env" ] || ! grep -q "REDIS_PORT=" worker/.env; then
              echo "REDIS_PORT=${{ secrets.REDIS_PORT }}" >> worker/.env
            fi

            # Display .env files for verification
            cat server/.env
            cat worker/.env


            # Navigate to worker directory, install dependencies, build, and start the worker
            cd worker
            npm install
            npm run build
            pm2 stop worker 
            pm2 start dist/index.js --name worker
